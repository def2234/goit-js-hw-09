{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1CNQ,QAAUC,SAASC,MAAM,GAAGV,MAC1BW,OAASF,SAASC,MAAM,GAAGE,KAC3BC,SAAWJ,SAASC,MAAM,GAAGI,OAC7BC,SAAWN,SAASO,cAAc,uBACnCD,SAASE,iBAAiB,SAE5B,SAAoBC,GAClBA,EAAEC,iBAMF,IALA,IAAMC,EAAc,GAChBC,EAAQb,QAAQc,MACdV,EAAOD,OAAOW,MACdR,EAASD,SAASS,MAEfC,EAAI,EAAGA,EAAIT,EAAQS,GAAK,EAAG,CAClC,IAAIC,EAAWD,EAAI,EAEnBF,EAAQI,OAAOJ,GAASE,EAAIX,EAE5BQ,EAAYM,KACV5B,EAAc0B,EAAUH,GACrBM,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAGjDiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QACd,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\n(delayEl = document.forms[0].delay),\n  (stepEl = document.forms[0].step),\n  (amountEl = document.forms[0].amount),\n  (submitEl = document.querySelector('button[type=submit]')),\n  submitEl.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(e) {\n  e.preventDefault();\n  const arrPromises = [];\n  let delay = delayEl.value;\n  const step = stepEl.value;\n  const amount = amountEl.value;\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n\n    delay = Number(delay) + i * step;\n\n    arrPromises.push(\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        })\n    );\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delayEl","document","forms","stepEl","step","amountEl","amount","submitEl","querySelector","addEventListener","e","preventDefault","arrPromises","delay1","value","i","position1","Number","push","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.73c804af.js.map"}