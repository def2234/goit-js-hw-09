{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAUC,SAASC,MAAM,GAAGC,MAC5BC,EAASH,SAASC,MAAM,GAAGG,KAC3BC,EAAWL,SAASC,MAAM,GAAGK,OAgCnC,SAASC,EAAcC,EAAUN,GAC/B,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUN,UAEpBS,EAAO,CAAEH,WAAUN,S,GAEpBA,E,IAvCUF,SAASgB,cAAc,uBAC/BC,iBAAiB,SAE1B,SAAoBC,GAClBA,EAAEC,iBAMF,IALA,IAAMC,EAAc,GAChBC,EAAQtB,EAAQuB,MACdlB,EAAOD,EAAOmB,MACdhB,EAASD,EAASiB,MAEfC,EAAI,EAAGA,EAAIjB,EAAQiB,GAAK,EAAG,CAClC,IAAIC,EAAWD,EAAI,EAEnBF,EAAQI,OAAOJ,GAASE,EAAInB,EAE5BgB,EAAYM,KACVnB,EAAciB,EAAUH,GACrBM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUN,EAAK0B,EAAL1B,MACjB2B,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUN,EAAK0B,EAAL1B,MAClB2B,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst delayEl = document.forms[0].delay;\nconst stepEl = document.forms[0].step;\nconst amountEl = document.forms[0].amount;\n\nconst submitEl = document.querySelector('button[type=submit]');\nsubmitEl.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(e) {\n  e.preventDefault();\n  const arrPromises = [];\n  let delay = delayEl.value;\n  const step = stepEl.value;\n  const amount = amountEl.value;\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n\n    delay = Number(delay) + i * step;\n\n    arrPromises.push(\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        })\n    );\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayEl","document","forms","delay","$ce04d3a99e08e73b$var$stepEl","step","$ce04d3a99e08e73b$var$amountEl","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","querySelector","addEventListener","e","preventDefault","arrPromises","delay1","value","i","position1","Number","push","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1e75d5ea.js.map"}